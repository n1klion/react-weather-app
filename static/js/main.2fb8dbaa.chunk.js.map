{"version":3,"sources":["helpers/firstLetterCaps.js","components/Details.jsx","components/WeatherCard.jsx","components/Loader.jsx","components/Search.jsx","plugins/axios/interceptors.js","plugins/axios/index.js","store/weatherReducer.js","App.jsx","store/store.js","reportWebVitals.js","index.js"],"names":["firstLetterCaps","str","charAt","toUpperCase","slice","TabPane","Tabs","Details","details","className","defaultActiveKey","animated","inkBar","tabPane","list","map","item","index","time","Date","dt_txt","getHours","img","weather","icon","alt","main","description","temp","Math","round","tempMin","temp_min","tempMax","temp_max","feelsLike","feels_like","tab","src","WeatherCard","deleteCityFromList","nameCity","name","iconAlt","weather_of_24_hours","CloseOutlined","onClick","id","Loader","indicator","LoadingOutlined","style","fontSize","spin","Search","onSearchHandler","useState","value","setValue","placeholder","enterButton","size","onChange","e","target","onSearch","searchHandler","setParams","config","params","Object","assign","appid","process","lang","units","returnData","res","data","interceptors","axios","request","use","response","instance","create","baseURL","WEATHER","TOGGLE_LOADER","DELETE_WEATHER","initialState","isLoaded","citiesWeather","toggleLoader","bool","type","payload","checkRepeatCity","cities","length","some","city","weatherReducer","state","action","filter","App","dispatch","useDispatch","useSelector","deleteCity","span","offset","cityName","getState","a","requestArr","get","Promise","all","weatherOfCity","weatherOf24Hourse","citiesList","checked","weatherDetail","notification","warn","message","msg","status","error","info","lineHeight","color","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MASeA,MAJf,SAAyBC,GACvB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,I,yBCHzCC,EAAYC,IAAZD,QA4COE,MA1Cf,YAA+B,IAAZC,EAAW,EAAXA,QA+BjB,OACE,cAAC,IAAD,CACEC,UAAU,YACVC,iBAAiB,IACjBC,SAAU,CAAEC,QAAQ,EAAMC,SAAS,GAHrC,SA9BOL,EAAQM,KAAKC,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAO,IAAIC,KAAKH,EAAKI,QAAQC,WAC7BC,EAAMN,EAAKO,QAAQ,GAAGC,KACtBC,EAAMT,EAAKO,QAAQ,GAAGG,KACtBC,EAAc3B,EAAgBgB,EAAKO,QAAQ,GAAGI,aAC9CC,EAAOC,KAAKC,MAAMd,EAAKU,KAAKE,MAC5BG,EAAUF,KAAKC,MAAMd,EAAKU,KAAKM,UAC/BC,EAAUJ,KAAKC,MAAMd,EAAKU,KAAKQ,UAC/BC,EAAYN,KAAKC,MAAMd,EAAKU,KAAKU,YACvC,OACE,cAAC/B,EAAD,CAASgC,IAAKnB,EAAd,SACE,sBAAKT,UAAU,eAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAK6B,IAAG,2CAAsChB,EAAtC,QAAiDG,IAAKA,IAC9D,sBAAMhB,UAAU,sBAAhB,SAAuCkB,OAEzC,sBAAKlB,UAAU,eAAf,UACE,qBAAIA,UAAU,cAAd,UAA6BmB,EAA7B,WACA,uBAAMnB,UAAU,eAAhB,iBACOwB,EADP,YAC2BF,EAD3B,UAGA,uBAAMtB,UAAU,iBAAhB,wFAAiD0B,EAAjD,kBAXmBlB,SCclBsB,MA1Bf,YAAuD,IAAhChB,EAA+B,EAA/BA,QAASiB,EAAsB,EAAtBA,mBACxBC,EAAWlB,EAAQmB,KACnBlB,EAAOD,EAAQA,QAAQ,GAAGC,KAC1BmB,EAAUpB,EAAQA,QAAQ,GAAGG,KAC7BE,EAAOC,KAAKC,MAAMP,EAAQG,KAAKE,MAC/BD,EAAc3B,EAAgBuB,EAAQA,QAAQ,GAAGI,aACjDQ,EAAYN,KAAKC,MAAMP,EAAQG,KAAKU,YACpC5B,EAAUe,EAAQqB,oBACxB,OACE,eAAC,IAAD,CAAMnC,UAAW,oBAAjB,UACE,cAACoC,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAAmBjB,EAAQwB,KAC1CtC,UAAW,uBAEb,oBAAIA,UAAW,gBAAf,SAAiCgC,IACjC,sBAAKhC,UAAW,yBAAhB,UACE,qBAAK6B,IAAG,2CAAsCd,EAAtC,WAAqDC,IAAKkB,IAClE,uBAAMlC,UAAW,iBAAjB,UAAoCmB,EAApC,cAEF,mBAAGnB,UAAW,iBAAd,SAAiCkB,IACjC,oBAAGlB,UAAW,oBAAd,wFAAmD0B,EAAnD,WACA,cAAC,EAAD,CAAS3B,QAASA,Q,iBCfTwC,MARf,WACE,OACE,qBAAKvC,UAAW,cAAhB,SACE,cAAC,IAAD,CAAMwC,UAAW,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,QAAUC,MAAI,S,iBCkB1DC,MArBf,YAAsC,IAApBC,EAAmB,EAAnBA,gBAAmB,EACTC,mBAAS,IADA,mBAC5BC,EAD4B,KACrBC,EADqB,KAQnC,OACE,cAAC,IAAMJ,OAAP,CACE7C,UAAU,cACVkD,YAAY,4EACZC,YAAY,iCACZC,KAAK,QACLJ,MAAOA,EACPK,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOP,QACnCQ,SAAU,SAACR,GAAD,OAbd,SAAuBA,GACrBF,EAAgBE,GAChBC,EAAS,IAWcQ,CAAcT,O,0DCnBzC,SAASU,EAAUC,GACjB,IAAMC,EAASD,EAAOC,QAAU,GAOhC,OANAD,EAAOC,OAASC,OAAOC,OAAOF,EAAQ,CACpCG,MAAOC,mCACPC,KAAM,KACNC,MAAO,WAGFP,EAGT,SAASQ,EAAWC,GAClB,OAAOA,EAAIC,KAQEC,MALf,SAAsBC,GACpBA,EAAMD,aAAaE,QAAQC,IAAIf,GAC/Ba,EAAMD,aAAaI,SAASD,IAAIN,ICd5BQ,E,OAAWJ,EAAMK,OAAO,CAC5BC,QAASb,2CAGXM,EAAaK,GAEEA,QCNTG,EAAU,yBACVC,EAAgB,+BAChBC,EAAiB,gCAEjBC,EAAe,CACnBC,UAAU,EACVC,cAAe,IA8BjB,SAASC,EAAaC,GACpB,MAAO,CACLC,KAAMP,EACNQ,QAASF,GAsDb,SAASG,EAAgBC,EAAQf,GAC/B,QAAIe,EAAOC,QACFD,EAAOE,MAAK,SAACC,GAAD,OAAUA,EAAKtD,KAAOoC,EAASpC,MAKvCuD,MA3Ff,WAAuD,IAA/BC,EAA8B,uDAAtBb,EAAcc,EAAQ,uCACpD,OAAQA,EAAOT,MACb,KAAKR,EACH,OAAO,2BACFgB,GADL,IAEEZ,UAAU,EACVC,cAAc,GAAD,mBAAMW,EAAMX,eAAZ,CAA2BY,EAAOR,YAGnD,KAAKR,EACH,OAAO,2BACFe,GADL,IAEEZ,SAAUa,EAAOR,UAGrB,KAAKP,EACH,OAAO,2BACFc,GADL,IAEEX,cAAeW,EAAMX,cAAca,QAAO,SAACJ,GAAD,OAAUA,EAAKtD,KAAOyD,EAAOR,aAG3E,QACE,OAAOO,I,eCoBEG,MA7Cf,WACE,IAAMC,EAAWC,cAEXjB,EAAWkB,aAAY,SAACN,GAAD,OAAWA,EAAMhF,QAAQoE,YAChDb,EAAO+B,aAAY,SAACN,GAAD,OAAWA,EAAMhF,QAAQqE,iBAalD,SAASpD,EAAmBO,GAC1B4D,ED0BG,SAAoB5D,GACzB,MAAO,CACLgD,KAAMN,EACNO,QAASjD,GC7BA+D,CAAW/D,IAiBtB,OACE,mCACE,eAAC,IAAD,CAAKgE,KAAM,GAAIC,OAAQ,EAAGvG,UAAU,iBAApC,UACE,cAAC,EAAD,CAAQ8C,gBAhCd,SAAyBE,GD8CpB,IAAoBwD,EC7CnBxD,EACFkD,GD4CqBM,EC5CDxD,ED6CxB,uCAAO,WAAgBkD,EAAUO,GAA1B,+BAAAC,EAAA,sEAEHR,EAASd,GAAa,IAChBuB,EAAa,CACjBpC,EAAMqC,IAAN,qBAAwBJ,IACxBjC,EAAMqC,IAAN,sBAAyBJ,EAAzB,YALC,SAO8CK,QAAQC,IAAIH,GAP1D,mCAOII,EAPJ,KAOmBC,EAPnB,KAQGC,EAAaR,IAAW3F,QAAQqE,cAChC+B,EAAU1B,EAAgByB,EAAYF,GAEtCI,EAXH,2BAWwBJ,GAXxB,IAWuC5E,oBAAqB6E,IAE1DE,EAGHE,IAAaC,KAAK,CAChBC,QAAS,uFACTpG,YAAa,gIAJfgF,EA7BC,CACLZ,KAAMR,EACNS,QA2BwB4B,IAdnB,kDAsBGI,EAA8B,MAAxB,KAAI7C,SAAS8C,OAAiB,mFAAoB,KAAIF,QAClEF,IAAaK,MAAM,CACjBH,QAAS,uCACTpG,YAAaqG,IAzBZ,yBA4BHrB,EAASd,GAAa,IA5BnB,6EAAP,0DC3CIgC,IAAaM,KAAK,CAChBJ,QAAS,OACTpG,YAAa,yIA2BZgE,EAjBDb,EAAKqB,OACArB,EAAK/D,KAAI,SAACsF,EAAMpF,GAAP,OACd,cAAC,EAAD,CAAauB,mBAAoBA,EAAoBjB,QAAS8E,GAAWpF,MAIzE,qBAAKkC,MAAO,CAAEC,SAAU,SAAUgF,WAAY,IAAKC,MAAO,WAA1D,8EAWyB,cAAC,EAAD,U,gBC5C3BC,EAAWC,YAAgB,CAC/BhH,QAAS+E,IAGLkC,EAAmBC,OAAOC,sCAAwCC,IAGzDC,EAFDC,YAAYP,EAAUE,EAAiBM,YAAgBC,OCGtDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJgB,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2fb8dbaa.chunk.js","sourcesContent":["/**\r\n * Function for caps first letter\r\n * @param {String} str \r\n * @returns {String}\r\n */\r\nfunction firstLetterCaps(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n\r\nexport default firstLetterCaps","import { Tabs } from 'antd'\r\nimport firstLetterCaps from '../helpers/firstLetterCaps'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nfunction Details({ details }) {\r\n  function tabPane() {\r\n    return details.list.map((item, index) => {\r\n      const time = new Date(item.dt_txt).getHours()\r\n      const img = item.weather[0].icon\r\n      const alt = item.weather[0].main\r\n      const description = firstLetterCaps(item.weather[0].description)\r\n      const temp = Math.round(item.main.temp)\r\n      const tempMin = Math.round(item.main.temp_min)\r\n      const tempMax = Math.round(item.main.temp_max)\r\n      const feelsLike = Math.round(item.main.feels_like)\r\n      return (\r\n        <TabPane tab={time} key={index}>\r\n          <div className=\"details-wrap\">\r\n            <div className=\"details-weather\">\r\n              <img src={`http://openweathermap.org/img/wn/${img}.png`} alt={alt} />\r\n              <span className=\"weather-description\">{description}</span>\r\n            </div>\r\n            <div className=\"details-temp\">\r\n              <h3 className=\"temp-degree\">{temp}&#176;C</h3>\r\n              <span className=\"temp-max-min\">\r\n                max:{tempMax}&#176; min:{tempMin}&#176;\r\n              </span>\r\n              <span className=\"temp-feelslike\">Ощущается как: {feelsLike}&#176;C</span>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tabs\r\n      className=\"tabs-wrap\"\r\n      defaultActiveKey=\"0\"\r\n      animated={{ inkBar: true, tabPane: true }}\r\n    >\r\n      {tabPane()}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import firstLetterCaps from '../helpers/firstLetterCaps'\r\nimport { Card } from 'antd'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport Details from './Details'\r\n\r\nfunction WeatherCard({ weather, deleteCityFromList }) {\r\n  const nameCity = weather.name\r\n  const icon = weather.weather[0].icon\r\n  const iconAlt = weather.weather[0].main\r\n  const temp = Math.round(weather.main.temp)\r\n  const description = firstLetterCaps(weather.weather[0].description)\r\n  const feelsLike = Math.round(weather.main.feels_like)\r\n  const details = weather.weather_of_24_hours\r\n  return (\r\n    <Card className={'weather-card-wrap'}>\r\n      <CloseOutlined\r\n        onClick={() => deleteCityFromList(weather.id)}\r\n        className={'weather-card-close'}\r\n      />\r\n      <h3 className={'weather-title'}>{nameCity}</h3>\r\n      <div className={'weather-degree-details'}>\r\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt={iconAlt} />\r\n        <span className={'weather-degree'}>{temp}&#176;C</span>\r\n      </div>\r\n      <p className={'weather-clouds'}>{description}</p>\r\n      <p className={'weather-feelslike'}>Ощущается как: {feelsLike}&#176;C</p>\r\n      <Details details={details} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default WeatherCard\r\n","import { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={'loader-wrap'}>\r\n      <Spin indicator={<LoadingOutlined style={{ fontSize: '4rem' }} spin />} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { Input } from 'antd'\r\nimport { useState } from 'react'\r\n\r\nfunction Search({ onSearchHandler }) {\r\n  const [value, setValue] = useState('')\r\n\r\n  function searchHandler(value) {\r\n    onSearchHandler(value)\r\n    setValue('')\r\n  }\r\n\r\n  return (\r\n    <Input.Search\r\n      className=\"search-body\"\r\n      placeholder=\"Введите город\"\r\n      enterButton=\"Поиск\"\r\n      size=\"large\"\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      onSearch={(value) => searchHandler(value)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Search\r\n","function setParams(config) {\r\n  const params = config.params || {}\r\n  config.params = Object.assign(params, {\r\n    appid: process.env.REACT_APP_APPID,\r\n    lang: 'ru',\r\n    units: 'metric',\r\n  })\r\n\r\n  return config\r\n}\r\n\r\nfunction returnData(res) {\r\n  return res.data\r\n}\r\n\r\nfunction interceptors(axios) {\r\n  axios.interceptors.request.use(setParams)\r\n  axios.interceptors.response.use(returnData)\r\n}\r\n\r\nexport default interceptors\r\n","import axios from 'axios'\r\nimport interceptors from './interceptors'\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n})\r\n\r\ninterceptors(instance)\r\n\r\nexport default instance\r\n","import { notification } from 'antd'\r\nimport axios from '../plugins/axios'\r\n\r\nconst WEATHER = 'weatherReducer/WEATHER'\r\nconst TOGGLE_LOADER = 'weatherReducer/TOGGLE_LOADER'\r\nconst DELETE_WEATHER = 'weatherReducer/DELETE_WEATHER'\r\n\r\nconst initialState = {\r\n  isLoaded: true,\r\n  citiesWeather: [],\r\n}\r\n\r\nfunction weatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case WEATHER: {\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n        citiesWeather: [...state.citiesWeather, action.payload],\r\n      }\r\n    }\r\n    case TOGGLE_LOADER: {\r\n      return {\r\n        ...state,\r\n        isLoaded: action.payload,\r\n      }\r\n    }\r\n    case DELETE_WEATHER: {\r\n      return {\r\n        ...state,\r\n        citiesWeather: state.citiesWeather.filter((city) => city.id !== action.payload),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Actions\r\nfunction toggleLoader(bool) {\r\n  return {\r\n    type: TOGGLE_LOADER,\r\n    payload: bool,\r\n  }\r\n}\r\n\r\nfunction setWeather(data) {\r\n  return {\r\n    type: WEATHER,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport function deleteCity(id) {\r\n  return {\r\n    type: DELETE_WEATHER,\r\n    payload: id,\r\n  }\r\n}\r\n\r\n// Thunks\r\nexport function getWeather(cityName) {\r\n  return async function (dispatch, getState) {\r\n    try {\r\n      dispatch(toggleLoader(false))\r\n      const requestArr = [\r\n        axios.get(`/weather?q=${cityName}`),\r\n        axios.get(`/forecast?q=${cityName}&cnt=9`),\r\n      ]\r\n      const [weatherOfCity, weatherOf24Hourse] = await Promise.all(requestArr)\r\n      const citiesList = getState().weather.citiesWeather\r\n      const checked = checkRepeatCity(citiesList, weatherOfCity)\r\n\r\n      const weatherDetail = { ...weatherOfCity, weather_of_24_hours: weatherOf24Hourse }\r\n\r\n      if (!checked) {\r\n        dispatch(setWeather(weatherDetail))\r\n      } else {\r\n        notification.warn({\r\n          message: 'Пердупреждение',\r\n          description: 'Этот город уже добавлен',\r\n        })\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response.status === 404 ? 'Город не найден' : err.message\r\n      notification.error({\r\n        message: 'Ошибка',\r\n        description: msg,\r\n      })\r\n    } finally {\r\n      dispatch(toggleLoader(true))\r\n    }\r\n  }\r\n}\r\n\r\n// Helpers\r\nfunction checkRepeatCity(cities, response) {\r\n  if (cities.length) {\r\n    return cities.some((city) => city.id === response.id)\r\n  }\r\n  return false\r\n}\r\n\r\nexport default weatherReducer\r\n","import { useDispatch, useSelector } from 'react-redux'\nimport WeatherCard from './components/WeatherCard'\nimport Loader from './components/Loader'\nimport Search from './components/Search'\nimport { getWeather, deleteCity } from './store/weatherReducer'\nimport { notification, Col } from 'antd'\n\nimport './App.less'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const isLoaded = useSelector((state) => state.weather.isLoaded)\n  const data = useSelector((state) => state.weather.citiesWeather)\n\n  function onSearchHandler(value) {\n    if (value) {\n      dispatch(getWeather(value))\n    } else {\n      notification.info({\n        message: 'Info',\n        description: 'Введите город для поиска',\n      })\n    }\n  }\n\n  function deleteCityFromList(id) {\n    dispatch(deleteCity(id))\n  }\n\n  function dataList() {\n    if (data.length) {\n      return data.map((city, index) => (\n        <WeatherCard deleteCityFromList={deleteCityFromList} weather={city} key={index} />\n      ))\n    } else {\n      return (\n        <div style={{ fontSize: '1.2rem', lineHeight: 1.2, color: '#bfbfbf' }}>\n          Список пуст...\n        </div>\n      )\n    }\n  }\n\n  return (\n    <>\n      <Col span={12} offset={6} className=\"container-wrap\">\n        <Search onSearchHandler={onSearchHandler} />\n        {isLoaded ? dataList() : <Loader />}\n      </Col>\n    </>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport weatherReducer from './weatherReducer'\r\n\r\nconst reducers = combineReducers({\r\n  weather: weatherReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './App'\nimport store from './store/store'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}